{"version":3,"sources":["App.tsx","components/Loader/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeoplePage.tsx","components/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["App","isActiveNav","isActive","cn","className","role","to","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","name","peopleWithParents","people","map","mother","find","motherName","father","fatherName","PeoplePage","useState","setPeople","isLoading","setIsLoading","hasError","setHasError","personSlug","useParams","useEffect","catch","finally","length","born","died","NotFoundPage","Root","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1c55b3cb.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { NavLink, Outlet } from 'react-router-dom';\nimport './App.scss';\n\nexport const App = () => {\n  const isActiveNav = ({ isActive }: { isActive: boolean }) => cn(\n    'navbar-item', {\n      'has-background-grey-lighter': isActive,\n    },\n  );\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={isActiveNav}\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              to=\"/people\"\n              className={isActiveNav}\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","export const HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={cn(\n        { 'has-text-danger': person.sex === 'f' },\n      )}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { Loader } from './Loader';\nimport { PersonLink } from './PersonLink';\n\nconst peopleWithParents = (people: Person[]): Person[] => {\n  return people.map(person => {\n    const mother = people.find(({ name }) => name === person.motherName);\n    const father = people.find(({ name }) => name === person.fatherName);\n\n    return ({\n      ...person,\n      mother,\n      father,\n    });\n  });\n};\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const { personSlug } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(setPeople)\n      .catch(() => {\n        setHasError(true);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {hasError && (\n            <p\n              data-cy=\"peopleLoadingError\"\n              className=\"has-text-danger\"\n            >\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && !hasError && people?.length === 0 && (\n            <p\n              data-cy=\"noPeopleMessage\"\n            >\n              There are no people on the server\n            </p>\n          )}\n          {!hasError && people?.length > 0 && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {peopleWithParents(people).map((person) => (\n                  <tr\n                    data-cy=\"person\"\n                    key={person.slug}\n                    className={cn({\n                      'has-background-warning': personSlug === person.slug,\n                    })}\n                  >\n                    <td>\n                      <PersonLink\n                        person={person}\n                      />\n                    </td>\n\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    <td>\n                      {person.mother\n                        ? <PersonLink person={person.mother} />\n                        : person.motherName || '-'}\n                    </td>\n                    <td>\n                      {person.father\n                        ? <PersonLink person={person.father} />\n                        : person.fatherName || '-'}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { HomePage } from './components/Loader/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        <Route index element={<HomePage />} />\n        <Route path=\"people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":personSlug\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}